{"version":3,"sources":["components/Navigation/navigation.js","components/Form/form.js","utils/api.js","components/Table/Table.js","components/Main/Main.js","App.js","index.js"],"names":["Navigation","className","React","Component","Form","props","onSubmit","handleFormSubmit","value","name","onChange","handleInputChange","type","placeholder","API","getUsers","axios","get","Table","scope","data-field","data-sortable","onClick","sortBy","state","filteredEmployees","map","employee","first","last","fullName","dob","formatDate","date","src","picture","thumbnail","alt","href","phone","email","login","uuid","Main","search","employees","sortDirections","initialSortDirections","event","target","setState","filterEmployees","toLowerCase","trim","preventDefault","key","primary","secondary","sortedEmployees","reverse","sort","a","b","localeCompare","input","filter","concat","includes","replace","Date","push","getMonth","slice","getDate","getFullYear","join","then","res","data","results","catch","err","console","log","this","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e686283.chunk.js","sourcesContent":["import React from \"react\";\nimport './nav.css';\n\nclass Navigation extends React.Component {\n  render() {\n    return(\n      <header>\n        <h1 className=\"text-center\">Employee Directory</h1>\n          <p className=\"text-center\">Use the Search Form to Narrow Directory Results</p>\n    </header>\n    )\n  }\n}\n  \nexport default Navigation;","import React from \"react\";\n\n\nconst Form = (props) => {\n  return (\n    <div>\n      <form className=\"form-inline m-2\" onSubmit={props.handleFormSubmit}>\n          <input\n            className=\"form-control\"\n            value={props.value}\n            name=\"search\"\n            onChange={props.handleInputChange}\n            type=\"search\"\n            placeholder=\"Search\"\n          />\n        </form>\n    </div>\n  )\n}\nexport default Form;","import axios from \"axios\";\n\nconst BASEURL = \"https://randomuser.me/api/?results=25&nat=ca\"\n\nconst API = {\n  getUsers: function() {\n    return axios.get(BASEURL);\n  }\n}\n\nexport default API;","import React from \"react\";\nimport './Table.css';\nimport API from '../../utils/api';\n// import Body from '../TableBody/Body';\n// // import API from '../../utils/api';\n// // import TableHead from \"../tableHeader\";\n// // import TableBody from '../tableBody';\n// import './Table.css';\n\nconst Table = (props) => {\n    return (\n      <table className=\"table table-striped table-sortable text-center\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Image</th>\n            <th scope=\"col\" data-field=\"name\" data-sortable=\"true\">\n              <span onClick={() => props.sortBy(\"name\", \"last\", \"first\")}>\n                Name\n              </span>\n            </th>\n            <th scope=\"col\">\n              <span onClick={() => props.sortBy(\"phone\")}>Phone</span>\n            </th>\n            <th scope=\"col\">\n              <span onClick={() => props.sortBy(\"email\")}>Email</span>\n            </th>\n            <th scope=\"col\">\n              <span onClick={() => props.sortBy(\"dob\", \"date\")}>DOB</span>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.state.filteredEmployees.map((employee) => {\n            const { first, last } = employee.name;\n            const fullName = `${first} ${last}`;\n  \n            const dob = props.formatDate(employee.dob.date);\n  \n            return (\n              <tr key={employee.login.uuid}>\n                <td>\n                  <img src={employee.picture.thumbnail} alt={fullName} />\n                </td>\n                <td className=\"align-middle\">{fullName}</td>\n                <td className=\"align-middle\">\n                <a href={`tel:+1${employee.phone}`}>{employee.phone}</a></td>\n                <td className=\"align-middle email\">\n                  <a href={`mailto:${employee.email}`}>{employee.email}</a>\n                </td>\n                <td className=\"align-middle\">{dob}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  };\n  \n  export default Table;\n","import React, { Component } from \"react\";\nimport Form from \"../Form/form\";\nimport Table from \"../Table/Table\";\nimport API from \"../../utils/api\";\n\nclass Main extends Component {\n  state = {\n    search: \"\",\n    employees: [],\n    filteredEmployees: [],\n    sortDirections: this.initialSortDirections,\n  };\n\n  get initialSortDirections() {\n    return {\n      name: \"\",\n      phone: \"\",\n      email: \"\",\n      dob: \"\",\n    };\n  }\n\n  componentDidMount() {\n    API.getUsers()\n      .then((res) =>\n        this.setState({\n          employees: res.data.results,\n          filteredEmployees: res.data.results,\n        })\n      )\n      .catch((err) => console.log(err));\n  }\n\n  handleInputChange = (event) => {\n    const value = event.target.value;\n    this.setState({ search: value });\n    this.filterEmployees(value.toLowerCase().trim());\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  sortBy = (key, primary = 0, secondary = 0) => {\n    let sortedEmployees = this.state.filteredEmployees;\n    if (this.state.sortDirections[key]) {\n      this.setState({\n        filteredEmployees: sortedEmployees.reverse(),\n        sortDirections: {\n          ...this.initialSortDirections,\n          [key]: this.state.sortDirections[key] === \"asc\" ? \"desc\" : \"asc\",\n        },\n      });\n    } else {\n      sortedEmployees = this.state.filteredEmployees.sort((a, b) => {\n        a = a[key];\n        b = b[key];\n\n        // If secondary comparison given and primary comparison is equal then sort that instance by primary\n        if (primary) {\n          if (secondary && a[primary] === b[primary]) {\n            return a[secondary].localeCompare(b[secondary]);\n          }\n          return a[primary].localeCompare(b[primary]);\n        } else {\n          return a.localeCompare(b);\n        }\n      });\n\n      this.setState({\n        filteredEmployees: sortedEmployees,\n        sortDirections: {\n          ...this.initialSortDirections,\n          [key]: \"asc\",\n        },\n      });\n    }\n  };\n\n  filterEmployees = (input) => {\n    if (input) {\n      this.setState({\n        filteredEmployees: this.state.employees.filter((employee) => {\n          return (\n            employee.name.first\n              .toLowerCase()\n              .concat(\" \", employee.name.last.toLowerCase())\n              .includes(input) ||\n            employee.phone.includes(input) ||\n            employee.phone.replace(/[^\\w\\s]/gi, \"\").includes(input) ||\n            employee.email.includes(input) ||\n            this.formatDate(employee.dob.date).includes(input)\n          );\n        }),\n      });\n    } else {\n      this.setState({ filteredEmployees: this.state.employees });\n    }\n  };\n\n  formatDate = (date) => {\n    date = new Date(date);\n    let dob = [];\n    dob.push((\"0\" + (date.getMonth() + 1)).slice(-2));\n    dob.push((\"0\" + date.getDate()).slice(-2));\n    dob.push(date.getFullYear());\n\n    // Join formatted date\n    return dob.join(\"-\");\n  };\n\n  render() {\n    return (\n      <>\n        <Form\n          value={this.state.search}\n          handleInputChange={this.handleInputChange}\n          handleFormSubmit={this.handleFormSubmit}\n        />\n        <div className=\"container mt-4\">\n          <Table\n            state={this.state}\n            sortBy={this.sortBy}\n            filterEmployees={this.filterEmployees}\n            formatDate={this.formatDate}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Main;","import React from \"react\";\nimport Navigation from './components/Navigation/navigation';\nimport Main from './components/Main/Main';\n// import Form from \"./components/Form/form\";\n// import TableHead from \"./components/tableHeader\";\n// import TableBody from \"./components/tableBody\";\n// import Table from './components/Table/Table';\n\nclass App extends React.Component {\n  render(){\n    return(\n      <div>\n        <Navigation />\n        <Main />\n        {/* <Form />\n        <Table /> */}\n      </div>\n    )}}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n// import './styles/index.css';\n// import reportWebVitals from './other/reportWebVitals';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}